@using WebClient.Models
@model ZamowienieViewModel

@{
    ViewBag.Title = "Edycja";
}

@using (Html.BeginForm())
{


    <div class="form-horizontal">
        <h4>Zamowienie</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.KlientId, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownListFor(model => model.KlientId, ViewBag.Klienci as SelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.KlientId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataZlozeniaZamowienia, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.DataZlozeniaZamowienia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataZlozeniaZamowienia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CzyPrzyjetoZamowienie, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CzyPrzyjetoZamowienie)
                    @Html.ValidationMessageFor(model => model.CzyPrzyjetoZamowienie, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataPrzyjeciaZamowienia, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.DataPrzyjeciaZamowienia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataPrzyjeciaZamowienia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Zaplacono, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Zaplacono)
                    @Html.ValidationMessageFor(model => model.Zaplacono, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CzyZrealizowanoZamowienie, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CzyZrealizowanoZamowienie)
                    @Html.ValidationMessageFor(model => model.CzyZrealizowanoZamowienie, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataRealizacjiZamowienia, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.DataRealizacjiZamowienia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataRealizacjiZamowienia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <button name="action" type="submit" value="AddPosition" class="btn btn-default pull-right" formnovalidate> Dodaj pozycje</button>
            <table class="table">
                <caption>Pozycje zamówienia</caption>
                <col style="width:25%">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Pozycje[0].TowarNazwa)</th>
                        <th>@Html.DisplayNameFor(model => model.Pozycje[0].Ilosc)</th>
                        <th>@Html.DisplayNameFor(model => model.Pozycje[0].TowarCena)</th>
                        <th>@Html.DisplayNameFor(model => model.Pozycje[0].TowarVat)</th>
                        <th>@Html.DisplayNameFor(model => model.Pozycje[0].Netto)</th>
                        <th>@Html.DisplayNameFor(model => model.Pozycje[0].Vat)</th>
                        <th>@Html.DisplayNameFor(model => model.Pozycje[0].Brutto)</th>
                        <th> </th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Pozycje.Count; i++)
                    {
                        @Html.EditorFor(model => Model.Pozycje[i])
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td> </td>
                        <td> </td>
                        <td> </td>
                        <td> <strong> Suma: </strong> </td>
                        <td> <strong> @Html.DisplayFor(model => model.SumaNetto) zł</strong> </td>
                        <td> <strong> @Html.DisplayFor(model => model.SumaVat) zł</strong> </td>
                        <td> <strong> @Html.DisplayFor(model => model.SumaBrutto) zł</strong> </td>
                        <td> </td>
                    </tr>
                </tfoot>
            </table>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-9">
                <button name="action" type="submit" value="Save" class="btn btn-default"> Zapisz</button>
                <button name="action" type="submit" value="Calc" class="btn btn-default hidden" formnovalidate> Oblicz</button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Powrót do listy", "Index")
</div>

@section Scripts {
    <script>
        $(function ()
        {
            $("select[name*='Towar'], input[name*='Ilosc']").change(function () {
                $("button[value='Calc']").click();
            });

            $(document).on('click', "[data-dismiss='row']", function () {
                $(this).closest("[role='row']").remove();
                $("button[value='Calc']").click();
            });
        })

    </script>
}
